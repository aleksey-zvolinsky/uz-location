
application {
  config {
    baseName UZLocation,
    applicationType monolith,
    packageName com.kerriline.location,
    authenticationType jwt,
    prodDatabaseType mysql,
    clientFramework angular,
    serverPort 8081,
    buildTool gradle,
    languages [ua, ru],
    databaseType sql,
    devDatabaseType	h2Disk
  }
  entities *
}


entity Tank {
	TankNumber String required,
    OwnerName String required,
    ClientName String required
}

paginate Tank with pagination
filter Tank

entity LocationRequest {
	RequestDatetime LocalDate,
	TankNumbers String
}

paginate LocationRequest with pagination
filter LocationRequest

entity LocationResponse {
    ResponseDatetime LocalDate,
    TankNumber String,
	TankType String,
    CargoId String,
    CargoName String,
    Weight String,
    ReceiverId String, 
    TankIndex String, 
    LocationStationId String,
    LocationStationName String, 
    LocationDatetime String,
    LocationOperation String
    StateFromStationId String,
    StateFromStationName String, 
    StateToStationId String,
    StateToStationName String, 
    StateSendDatetime String,
    StateSenderId String,
    PlanedServiceDatetime String,
    TankOwner String,
    TankModel String,
    DefectRegion String
    DefectStation String,
    DefectDatetime String,
    DefectDetails String,
    RepairRegion String, 
    RepairStation String,
    RepairDatetime String,
    UpdateDatetime String
}

paginate LocationResponse with pagination
filter LocationResponse

entity MileageRequest {
	RequestDatetime LocalDate,
	TankNumbers String
}

paginate MileageRequest with pagination
filter MileageRequest

entity MileageResponse {
    ResponseDatetime LocalDate,
    TankNumber String,
    MileageCurrent String,
    MileageDatetime String, 
    MileageRemain String, 
    MileageUpdateDatetime String
}

paginate MileageResponse with pagination
filter MileageResponse

relationship OneToMany {
	Tank to LocationRequest
}

relationship OneToOne {
	LocationRequest to LocationResponse
}

relationship OneToMany {
	Tank to MileageRequest
}

relationship OneToOne {
	MileageRequest to MileageResponse
}
